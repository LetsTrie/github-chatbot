comment_url,html_url,author_login,author_url,created_at,updated_at,comment_body
https://api.github.com/repos/OptimalBits/bull/issues/comments/2282751009,https://github.com/OptimalBits/bull/pull/2744#issuecomment-2282751009,stale[bot],https://github.com/apps/stale,2024-08-11T12:51:11Z,2024-08-11T12:51:11Z,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/2282754707,https://github.com/OptimalBits/bull/pull/2744#issuecomment-2282754707,felixmosh,https://github.com/felixmosh,2024-08-11T13:04:18Z,2024-08-11T13:04:18Z,?
https://api.github.com/repos/OptimalBits/bull/issues/comments/2131189580,https://github.com/OptimalBits/bull/pull/2716#issuecomment-2131189580,stale[bot],https://github.com/apps/stale,2024-05-25T10:20:54Z,2024-05-25T10:20:54Z,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/2132271176,https://github.com/OptimalBits/bull/pull/2716#issuecomment-2132271176,martinslota,https://github.com/martinslota,2024-05-26T16:02:12Z,2024-05-26T16:02:12Z,"I'd love to keep this pull request alive because the bug it fixes is affecting our production deployments and it generates quite a bit of noise.

@manast I apologize for cold-tagging you here - I'd appreciate any pointers or suggestions regarding how I could take this pull request further."
https://api.github.com/repos/OptimalBits/bull/issues/comments/2252158990,https://github.com/OptimalBits/bull/pull/2716#issuecomment-2252158990,stale[bot],https://github.com/apps/stale,2024-07-26T07:40:37Z,2024-07-26T07:40:37Z,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/2256953828,https://github.com/OptimalBits/bull/pull/2716#issuecomment-2256953828,martinslota,https://github.com/martinslota,2024-07-29T20:57:19Z,2024-07-29T20:57:19Z,"Iâ€™m still hopeful that this bug fix will eventually get some attention from a maintainer.

In the meantime, I will make sure to deploy the fix as part of our code to gain additional confidence. I will report again when it has been out for a while."
https://api.github.com/repos/OptimalBits/bull/issues/comments/2293756310,https://github.com/OptimalBits/bull/pull/2716#issuecomment-2293756310,manast,https://github.com/manast,2024-08-16T15:54:00Z,2024-08-16T15:54:00Z,"@martinslota have you checked how connections are handled in BullMQ? I have spent quite a lot of time trying to iron out all connection issues, including workarounds for ioredis bugs when blocking commands gets disconnected: https://github.com/taskforcesh/bullmq/blob/master/src/classes/redis-connection.ts"
https://api.github.com/repos/OptimalBits/bull/issues/comments/2295923065,https://github.com/OptimalBits/bull/pull/2716#issuecomment-2295923065,martinslota,https://github.com/martinslota,2024-08-19T08:04:21Z,2024-08-19T08:04:21Z,"@manast No, I haven't - thank you for the reference! ðŸ™‡ 

We have just adopted this small fix in our code and it will be going to production today.

Would it be possible to backport the connection fixes to Bull? Or would your recommendation be to migrate to BullMQ? We have not explored what it would take to do but I think having fewer random connection errors could make it worth the effort."
https://api.github.com/repos/OptimalBits/bull/issues/comments/2297004771,https://github.com/OptimalBits/bull/pull/2716#issuecomment-2297004771,manast,https://github.com/manast,2024-08-19T16:47:37Z,2024-08-19T16:47:37Z,"> Would it be possible to backport the connection fixes to Bull? Or would your recommendation be to migrate to BullMQ? We have not explored what it would take to do but I think having fewer random connection errors could make it worth the effort.

Actually no as the way connections are handled in Bull is quite different so it is not trivial to do."
https://api.github.com/repos/OptimalBits/bull/issues/comments/878275226,https://github.com/OptimalBits/bull/pull/1897#issuecomment-878275226,stale[bot],https://github.com/apps/stale,2021-07-12T13:22:17Z,2021-07-12T13:22:17Z,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/520167548,https://github.com/OptimalBits/bull/pull/1422#issuecomment-520167548,coveralls,https://github.com/coveralls,2019-08-10T17:45:10Z,2019-11-16T11:03:12Z,"
[![Coverage Status](https://coveralls.io/builds/27030257/badge)](https://coveralls.io/builds/27030257)

Coverage increased (+0.7%) to 93.777% when pulling **ae0e227ff9a3d52df35c6361f94057d4b1777f49 on HugoPoi:develop** into **01f815409ffce3b84ed7a9c9ff26367692fc23ee on OptimalBits:develop**.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/550986646,https://github.com/OptimalBits/bull/pull/1422#issuecomment-550986646,Eywek,https://github.com/Eywek,2019-11-07T09:00:42Z,2019-11-07T09:00:42Z,Any news on this?
https://api.github.com/repos/OptimalBits/bull/issues/comments/553371041,https://github.com/OptimalBits/bull/pull/1422#issuecomment-553371041,HugoPoi,https://github.com/HugoPoi,2019-11-13T11:53:16Z,2019-11-13T11:53:16Z,I need someone to review it. And it might be useful to have #1498 with this.
https://api.github.com/repos/OptimalBits/bull/issues/comments/563355296,https://github.com/OptimalBits/bull/pull/1422#issuecomment-563355296,oskarstrasburger,https://github.com/oskarstrasburger,2019-12-09T17:55:07Z,2019-12-09T17:55:07Z,Any news @manast ?
https://api.github.com/repos/OptimalBits/bull/issues/comments/566881367,https://github.com/OptimalBits/bull/pull/1422#issuecomment-566881367,faller,https://github.com/faller,2019-12-18T06:02:24Z,2019-12-18T06:02:24Z,Any news?
https://api.github.com/repos/OptimalBits/bull/issues/comments/602023908,https://github.com/OptimalBits/bull/pull/1422#issuecomment-602023908,manast,https://github.com/manast,2020-03-21T10:24:09Z,2020-03-21T10:24:09Z,I would merge this but my last comment needs to be addressed!
https://api.github.com/repos/OptimalBits/bull/issues/comments/602026547,https://github.com/OptimalBits/bull/pull/1422#issuecomment-602026547,HugoPoi,https://github.com/HugoPoi,2020-03-21T10:53:54Z,2020-03-21T10:53:54Z,"Ok so I need to refactor, passing the flag directly in `opts.immediately` because it will need to be handle only at the first iteration and not saved in Redis. And no mutation, so no delete, no assignment with `=`."
https://api.github.com/repos/OptimalBits/bull/issues/comments/621272947,https://github.com/OptimalBits/bull/pull/1422#issuecomment-621272947,joaozitopolo,https://github.com/joaozitopolo,2020-04-29T15:07:58Z,2020-04-29T15:09:34Z,"Same problem here. I need to skip the first execution.
If the object ""job"" on process had a execution count, or a firstRun flag, we can do the skip in the process function."
https://api.github.com/repos/OptimalBits/bull/issues/comments/788216187,https://github.com/OptimalBits/bull/pull/1422#issuecomment-788216187,santiq,https://github.com/santiq,2021-03-01T19:38:31Z,2021-03-01T19:38:31Z,@HugoPoi hey man I know it's been a year but could you do those changes? I'll be happy to help.
https://api.github.com/repos/OptimalBits/bull/issues/comments/803301727,https://github.com/OptimalBits/bull/pull/1422#issuecomment-803301727,HugoPoi,https://github.com/HugoPoi,2021-03-20T12:26:41Z,2021-03-20T12:26:41Z,"I have rebase the change on develop, an immediately flag will be saved in redis is it bad ? I think not.
If we don't want to save the `immediately` flag in db, need a change to the `deepDefault` to omit the prop."
https://api.github.com/repos/OptimalBits/bull/issues/comments/878275159,https://github.com/OptimalBits/bull/pull/1422#issuecomment-878275159,stale[bot],https://github.com/apps/stale,2021-07-12T13:22:12Z,2021-07-12T13:22:12Z,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/880709139,https://github.com/OptimalBits/bull/pull/1422#issuecomment-880709139,manast,https://github.com/manast,2021-07-15T13:47:49Z,2021-07-15T13:47:49Z,If somebody wants to fix this PR it is just a matter of backporting this PR from BullMQ: https://github.com/taskforcesh/bullmq/pull/536
https://api.github.com/repos/OptimalBits/bull/issues/comments/453968714,https://github.com/OptimalBits/bull/pull/1173#issuecomment-453968714,dawiss1337,https://github.com/dawiss1337,2019-01-14T11:06:09Z,2019-01-14T11:06:09Z,@manast would appreciate if you could take a look at this PR
https://api.github.com/repos/OptimalBits/bull/issues/comments/453970372,https://github.com/OptimalBits/bull/pull/1173#issuecomment-453970372,coveralls,https://github.com/coveralls,2019-01-14T11:12:46Z,2019-01-14T11:12:46Z,"
[![Coverage Status](https://coveralls.io/builds/21058463/badge)](https://coveralls.io/builds/21058463)

Coverage decreased (-0.06%) to 93.789% when pulling **ac446e48e5e8d3ca19bee1456a6ecbf10454859f on DavisJaunzems:master** into **40a69ac1959f4c0b6981be0c64f7889714b069c7 on OptimalBits:develop**.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/453970375,https://github.com/OptimalBits/bull/pull/1173#issuecomment-453970375,coveralls,https://github.com/coveralls,2019-01-14T11:12:46Z,2019-01-14T11:12:46Z,"
[![Coverage Status](https://coveralls.io/builds/21058463/badge)](https://coveralls.io/builds/21058463)

Coverage decreased (-0.06%) to 93.789% when pulling **ac446e48e5e8d3ca19bee1456a6ecbf10454859f on DavisJaunzems:master** into **40a69ac1959f4c0b6981be0c64f7889714b069c7 on OptimalBits:develop**.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/453970378,https://github.com/OptimalBits/bull/pull/1173#issuecomment-453970378,coveralls,https://github.com/coveralls,2019-01-14T11:12:47Z,2019-02-07T08:13:34Z,"
[![Coverage Status](https://coveralls.io/builds/21502595/badge)](https://coveralls.io/builds/21502595)

Coverage decreased (-0.01%) to 93.836% when pulling **2b5bfdc46831f5659f242ca48a93e79cb14ca11b on DavisJaunzems:master** into **40a69ac1959f4c0b6981be0c64f7889714b069c7 on OptimalBits:develop**.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/455322022,https://github.com/OptimalBits/bull/pull/1173#issuecomment-455322022,manast,https://github.com/manast,2019-01-17T20:33:30Z,2019-01-17T20:33:30Z,@DavisJaunzems sorry for the late response. It has been a hectic week so far.
https://api.github.com/repos/OptimalBits/bull/issues/comments/455986410,https://github.com/OptimalBits/bull/pull/1173#issuecomment-455986410,dawiss1337,https://github.com/dawiss1337,2019-01-21T08:26:41Z,2019-01-21T08:26:41Z,"The latest commit has changed method and variable names, and removed redundant code @manast "
https://api.github.com/repos/OptimalBits/bull/issues/comments/456163667,https://github.com/OptimalBits/bull/pull/1173#issuecomment-456163667,manast,https://github.com/manast,2019-01-21T18:29:01Z,2019-01-21T18:29:01Z,"There are 3 format issues preventing the tests from running:
```
/home/travis/build/OptimalBits/bull/test/test_child-pool.js
  145:74  error  Unexpected function expression            prefer-arrow-callback
  146:5   error  Unexpected var, use let or const instead  no-var
  150:40  error  Unexpected function expression            prefer-arrow-callback
```
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/457103810,https://github.com/OptimalBits/bull/pull/1173#issuecomment-457103810,dawiss1337,https://github.com/dawiss1337,2019-01-24T08:06:48Z,2019-01-24T08:06:48Z,"@manast what command did you run to get these errors, because I can run all of the tests locally?
Also looking at the format issues (using `let` or `const` instead of `var` and using arrow functions), all of the tests should have the same formatting issues.."
https://api.github.com/repos/OptimalBits/bull/issues/comments/459075704,https://github.com/OptimalBits/bull/pull/1173#issuecomment-459075704,manast,https://github.com/manast,2019-01-30T19:25:56Z,2019-01-30T19:25:56Z,"@DavisJaunzems The command that you can run locally:
```npm run prettier -- --list-different```
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/461322276,https://github.com/OptimalBits/bull/pull/1173#issuecomment-461322276,dawiss1337,https://github.com/dawiss1337,2019-02-07T08:05:42Z,2019-02-07T08:05:42Z,"@manast updated the code, anything else before this can be merged?"
https://api.github.com/repos/OptimalBits/bull/issues/comments/522948354,https://github.com/OptimalBits/bull/pull/1173#issuecomment-522948354,ks-s-a,https://github.com/ks-s-a,2019-08-20T10:10:44Z,2019-08-20T10:10:44Z,"The PR was spoiled, but the feature is good. @manast may it be merged for the next release?"
https://api.github.com/repos/OptimalBits/bull/issues/comments/523136844,https://github.com/OptimalBits/bull/pull/1173#issuecomment-523136844,manast,https://github.com/manast,2019-08-20T18:22:04Z,2019-08-20T18:22:04Z, In order to merge this we need to rework it according to the comments and make it pass the tests.
https://api.github.com/repos/OptimalBits/bull/issues/comments/878275526,https://github.com/OptimalBits/bull/pull/1173#issuecomment-878275526,stale[bot],https://github.com/apps/stale,2021-07-12T13:22:38Z,2021-07-12T13:22:38Z,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/416291606,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416291606,manast,https://github.com/manast,2018-08-27T16:52:35Z,2018-08-27T16:52:35Z,Thanks for the PR. Could you please motivate why you would like to force taking a lock? it could potentially have a lot of side effects.
https://api.github.com/repos/OptimalBits/bull/issues/comments/416293589,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416293589,rysi3k,https://github.com/rysi3k,2018-08-27T16:59:17Z,2018-08-27T16:59:17Z,"Hello,
My scenario:
1. Job is processing on remote server, my code only supervising it (requests for status every 15s)
2. Supervisor process is restarted/crashed
3. On process start I need to check if on remote server job is still processing (request for status)
4. If processing is in progress, I take lock of job and run standard requests every 15s

In normal implementation, job will be stalled on bull, but on remote server will be continued. I dont want to restart it.

Regards
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/416295194,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416295194,manast,https://github.com/manast,2018-08-27T17:04:23Z,2018-08-27T17:04:23Z,"In the scenario above, I do not get why the job is stalled, you wrote that the supervisor process crashes, but not the remote server processing the job, right?"
https://api.github.com/repos/OptimalBits/bull/issues/comments/416297916,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416297916,rysi3k,https://github.com/rysi3k,2018-08-27T17:13:05Z,2018-08-27T17:13:05Z,"Yes, supervisor where bull works crashes. So, there is different `queue.token`, this causes job stalled."
https://api.github.com/repos/OptimalBits/bull/issues/comments/416326857,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416326857,manast,https://github.com/manast,2018-08-27T18:43:26Z,2018-08-27T18:43:26Z,"If the process running bull crashes, the jobs will picked up later by other bull workers, I still do not fully understand your use case :/"
https://api.github.com/repos/OptimalBits/bull/issues/comments/416457003,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416457003,rysi3k,https://github.com/rysi3k,2018-08-28T05:35:44Z,2018-08-28T08:27:37Z,"Hello.

I missed important part. My `process` function is defined as:

1. Start request to remote server
2. Checks every 15s to get result
3. If remote server will return ""done"", job is done, bull is notified.

So once started job will process independly from bull.
If bull crashes and whole process will start from begining it will also
send `start` request which cause reset job on remote side.

Regards
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/416644799,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416644799,manast,https://github.com/manast,2018-08-28T16:06:11Z,2018-08-28T16:06:11Z,"Can you explain the point 4 a bit more? (If processing is in progress, I take lock of job and run standard requests every 15s)
"
https://api.github.com/repos/OptimalBits/bull/issues/comments/416872514,https://github.com/OptimalBits/bull/pull/1033#issuecomment-416872514,rysi3k,https://github.com/rysi3k,2018-08-29T08:37:08Z,2018-08-29T08:37:08Z,"Here is my simplified code, it could resolve any confusions.

```const worker = redis.getWorkerObject();

queue.on('failed', () => {
    worker.setCurrentJobId(0);
}).on('completed', () => {
    worker.setCurrentJobId(0);
});
start();
   
async start() {  

    // check if some job is not done
    if (worker.currentJobId) {
        const job = await queue.getJob(jobId);
        if (job) {
            // if some job is found, process and wait until end
            await resumeProcessing(job);
        }
        worker.setCurrentJobId(0);
    }

    // normal processing method
    queue.process(async(job) => {
        await remoteServer.start(job.data);
        worker.setCurrentJobId(job.id);

        return await checkStatus(job);
    });
}

async resumeProcessing(job) {
    job.takeLock(true);
    // process method needs uniq name if we dont want to use this handler anymore, lockKey looks good for it
    queue.process(job.name = job.lockKey(), async(job) => {
        return await checkStatus(job);
    });
    await queue.processJob(job);
}

async checkStatus(job) {
    const res = await remoteServer.getStatus(job.data);
    
    if (!isJobDone(res)) {
        // wait next 15s
        return new Promise((resolve, reject) => {
            setTimeout(() => this.checkStatus(job).then(resolve).catch(reject), 15000);
        });
    } else {
        return 'done';
    }
}"
https://api.github.com/repos/OptimalBits/bull/issues/comments/417952052,https://github.com/OptimalBits/bull/pull/1033#issuecomment-417952052,manast,https://github.com/manast,2018-09-02T18:54:40Z,2018-09-02T18:54:40Z,"I have studied the code above and I do not understand why it is needed, it looks as if you have implemented a similar mechanism of what already exists in bull to handle stalled jobs. A stalled job will be picked up by a idle worker, just remember to have a large enough value in the ```maxStalledCount``` setting: https://github.com/OptimalBits/bull/blob/master/REFERENCE.md#queue"
https://api.github.com/repos/OptimalBits/bull/issues/comments/418064530,https://github.com/OptimalBits/bull/pull/1033#issuecomment-418064530,rysi3k,https://github.com/rysi3k,2018-09-03T09:56:04Z,2018-09-03T09:56:04Z,"I have different ""process"" method in normal processing (start + checkStatus) and durign resuming (only checkStatus). 
In built in stalled method it is not possible to achive this or I'm miss something?"
https://api.github.com/repos/OptimalBits/bull/issues/comments/418162288,https://github.com/OptimalBits/bull/pull/1033#issuecomment-418162288,manast,https://github.com/manast,2018-09-03T17:01:53Z,2018-09-03T17:01:53Z,"ok, so your use case is to run a different process function when re-processing a stalled job?"
https://api.github.com/repos/OptimalBits/bull/issues/comments/418163802,https://github.com/OptimalBits/bull/pull/1033#issuecomment-418163802,rysi3k,https://github.com/rysi3k,2018-09-03T17:12:09Z,2018-09-03T17:12:09Z,"Hmmm I think yes, it could be called like this"
https://api.github.com/repos/OptimalBits/bull/issues/comments/418169171,https://github.com/OptimalBits/bull/pull/1033#issuecomment-418169171,manast,https://github.com/manast,2018-09-03T17:51:18Z,2018-09-03T17:51:18Z,"In that case I think I have a better solution. I think we can add a ""status"" flag to the job object that is passed to the processor, so depending on the flag you can run one code or another, it should simplify your code a lot, what do you think?"
https://api.github.com/repos/OptimalBits/bull/issues/comments/418625497,https://github.com/OptimalBits/bull/pull/1033#issuecomment-418625497,rysi3k,https://github.com/rysi3k,2018-09-05T07:18:40Z,2018-09-05T07:18:40Z,"Your Idea sounds good and should resolve my problems. 
BTW dont forget to fix `takeLock` method, ther is bug in call `lockKey` method ;)"
https://api.github.com/repos/OptimalBits/bull/issues/comments/878337828,https://github.com/OptimalBits/bull/pull/1033#issuecomment-878337828,stale[bot],https://github.com/apps/stale,2021-07-12T14:43:15Z,2021-07-12T14:43:15Z,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
